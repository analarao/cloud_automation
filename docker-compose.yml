# docker-compose.yml
services:

  cr-alertmanager:
    image: prom/alertmanager:latest
    container_name: cr-alertmanager
    ports:
      - "9093:9093" # Alertmanager UI port
  # --- CH (Container-Heart): The Monitored Application Host (represented by Node Exporter) ---
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    hostname: ch-application-host # The label Prometheus will scrape
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    ports:
      - "9100:9100"

  # --- CR (Container-Red Blood Cells): High-Fidelity Metrics Collector ---
  prometheus:
    user: root
    image: prom/prometheus:latest
    container_name: cr-prometheus
    volumes:
      - ./prometheus:/etc/prometheus:Z
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - node-exporter

  # --- CS (Container-Spine): Proactive Fault & Threat Detection (ML Models) ---
  cs-ml-service:
    build: ./cs_container
    container_name: cs-ml-service
    command: python -u ml_model_service.py
    ports:
      - 9001:9001
    environment:
      PROMETHEUS_URL: http://prometheus:9090
      CB_API_URL: http://cr-alertmanager:9093/api/v2/alerts 
    depends_on:
      - prometheus
      - cr-alertmanager # Depends on the component it sends alerts to
    # No exposed ports needed, it runs background jobs

  # --- CE (Container-Eye): Visualization Portal ---
  grafana:
    image: grafana/grafana:latest
    container_name: ce-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:z
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus

  # --- CB (Container-Brain) Mock: Alert Reception/Decision Endpoint ---
  cb-mock-api:
    build: ./cs_container # Reusing the cs_container image for simplicity
    container_name: cb-mock-api
    command: python cb_mock_alert_sender.py # Run the mock receiver
    ports:
      - "5001:5001" # Port to receive alerts

volumes:
  prometheus_data: {}
  grafana_data: {}